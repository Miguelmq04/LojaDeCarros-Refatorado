/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Forms.RegitrosTelas;

import DAO.CargoDAO;
import DAO.FuncionarioDAO;
import DAO.LoginFuncionarioDAO;
import Entities.Cargo;
import Entities.Funcionarios;
import Entities.LoginFuncionario;
import Entities.TipoCargo;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;



/**
 *
 * @author quart
 */
public class RegistroFuncionario extends javax.swing.JFrame {
     
    /**
     * Creates new form RegistroFuncionario
     */
    public RegistroFuncionario() {
        initComponents();
        preencherCargo();
        acessibilidadeFuncionario();
    }

    /**
     * Preenche a combobox com cargos registrados no banco de dados.
     * O método recupera alista de cargos disponível no banco de dados e adiciona a na combobox 'cbxCargo'
     */
    public void preencherCargo(){
        CargoDAO cargoDAO = new CargoDAO();
        cbxCargo.addItem("Cargo");
        
        List<TipoCargo> cargoLista = cargoDAO.getCargo();
        
        for(TipoCargo t : cargoLista){
            cbxCargo.addItem(t);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRegistroFuncionario = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblNomeFuncionario = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        lblCPF = new javax.swing.JLabel();
        txtNomeLogin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lblNomeLogin = new javax.swing.JLabel();
        txtCPF = new javax.swing.JTextField();
        lblSenha = new javax.swing.JLabel();
        txtSenha = new javax.swing.JTextField();
        lblCargo = new javax.swing.JLabel();
        btnRegistrarFuncionario = new javax.swing.JButton();
        cbxCargo = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itVoltar = new javax.swing.JMenuItem();
        itLimpar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        pnlRegistroFuncionario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Registro de funcionário");

        lblNomeFuncionario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNomeFuncionario.setLabelFor(txtNome);
        lblNomeFuncionario.setText("Nome:");

        txtNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNome.setToolTipText("Nome do funcionário");

        lblTelefone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTelefone.setLabelFor(txtTelefone);
        lblTelefone.setText("Telefone:");

        txtTelefone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTelefone.setToolTipText("Telefone do funcionário.");

        lblCPF.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCPF.setLabelFor(txtCPF);
        lblCPF.setText("CPF:");

        txtNomeLogin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNomeLogin.setToolTipText("Nome de login para acessar o sistema.");

        lblNomeLogin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNomeLogin.setLabelFor(txtNomeLogin);
        lblNomeLogin.setText("Nome para login:");

        txtCPF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCPF.setToolTipText("CPF do funcionário.");

        lblSenha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblSenha.setLabelFor(txtSenha);
        lblSenha.setText("Senha:");

        txtSenha.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSenha.setToolTipText("Senha do usuário.");

        lblCargo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCargo.setLabelFor(cbxCargo);
        lblCargo.setText("Cargo:");
        lblCargo.setToolTipText("");

        btnRegistrarFuncionario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRegistrarFuncionario.setText("Registrar");
        btnRegistrarFuncionario.setToolTipText("Registra o funcionário.");
        btnRegistrarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarFuncionarioActionPerformed(evt);
            }
        });

        cbxCargo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbxCargo.setToolTipText("Qual será o cargo do funcionário.");

        javax.swing.GroupLayout pnlRegistroFuncionarioLayout = new javax.swing.GroupLayout(pnlRegistroFuncionario);
        pnlRegistroFuncionario.setLayout(pnlRegistroFuncionarioLayout);
        pnlRegistroFuncionarioLayout.setHorizontalGroup(
            pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(pnlRegistroFuncionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegistroFuncionarioLayout.createSequentialGroup()
                        .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNomeFuncionario)
                            .addComponent(lblTelefone))
                        .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRegistroFuncionarioLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlRegistroFuncionarioLayout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(txtTelefone))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegistroFuncionarioLayout.createSequentialGroup()
                        .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCargo)
                            .addComponent(lblCPF))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCPF, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(cbxCargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlRegistroFuncionarioLayout.createSequentialGroup()
                        .addComponent(lblNomeLogin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNomeLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlRegistroFuncionarioLayout.createSequentialGroup()
                        .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pnlRegistroFuncionarioLayout.createSequentialGroup()
                                .addComponent(lblSenha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlRegistroFuncionarioLayout.createSequentialGroup()
                                .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlRegistroFuncionarioLayout.createSequentialGroup()
                                        .addGap(148, 148, 148)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1))
                                .addGap(116, 116, 116)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegistroFuncionarioLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRegistrarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlRegistroFuncionarioLayout.setVerticalGroup(
            pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistroFuncionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeFuncionario)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefone)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPF)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCargo)
                    .addComponent(cbxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeLogin)
                    .addComponent(txtNomeLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRegistroFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSenha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegistrarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jMenuBar1.setBorder(null);

        jMenu1.setText("Menu");

        itVoltar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        itVoltar.setText("Voltar");
        itVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itVoltarActionPerformed(evt);
            }
        });
        jMenu1.add(itVoltar);

        itLimpar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        itLimpar.setText("Limpar");
        itLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itLimparActionPerformed(evt);
            }
        });
        jMenu1.add(itLimpar);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlRegistroFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlRegistroFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Ação responsável por cadastrar um objeto do tipo funcionario no banco de dados.
     * Pressionando o botão, ele valida os campos e depois realiza a inserção do funcionario no banco de dados.
     * 
     * @param evt Evento disparado pela ação do botão.
     */
    private void btnRegistrarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarFuncionarioActionPerformed
         Funcionarios funcionarios = new Funcionarios();
         FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
         LoginFuncionarioDAO loginFuncionarioDAO = new LoginFuncionarioDAO();
         LoginFuncionario loginFuncionario = new LoginFuncionario(); 
         Cargo cargo = new Cargo();
         
         if(!validacaoCamposFuncionario()){
             if(validacaoFuncionarios()){
                 funcionarios.setNomeFuncionario(txtNome.getText().trim());
                 funcionarios.setTelefone(txtTelefone.getText().trim());
                 funcionarios.setCPF(txtCPF.getText());
                 
                 TipoCargo cargoSelecionado = (TipoCargo) cbxCargo.getSelectedItem();
                 cargo.setTipoCargo(cargoSelecionado);
                 cargo.setFuncionario(funcionarios);
                 funcionarios.setCargo(cargo);
                 
                 loginFuncionario.setLogin(txtNomeLogin.getText());
                 loginFuncionario.setSenha(txtSenha.getText());
                 
                 try{
                    loginFuncionarioDAO.cadastrarLogin(loginFuncionario);
                    funcionarios.setLoginFuncionario(loginFuncionario);
                    funcionarioDAO.cadastrarFuncionario(funcionarios);
                 
                    JOptionPane.showMessageDialog(rootPane, "O Funcionario foi cadastrado.");
                 
                    txtNome.setText("");
                    txtTelefone.setText("");
                    txtCPF.setText("");
                    cbxCargo.setSelectedIndex(0);
                    txtNomeLogin.setText("");
                    txtSenha.setText("");
                 }
                 catch(Exception ex){
                    JOptionPane.showMessageDialog(rootPane, "Erro ao cadastrar o funcionário: " + ex.getMessage());
                     return;
                 }
             }
             else{
                 return;
             }
         }
         else{
             return;
         }
    }//GEN-LAST:event_btnRegistrarFuncionarioActionPerformed

    /**
     * Essa ação é responsavel por limpar os campos de texto e redefir o valor da combobox.
     * @param evt Evento disparado pela ação do botão.
     */
    private void itLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itLimparActionPerformed
           txtNome.setText("");
           txtTelefone.setText("");
           txtCPF.setText("");
           cbxCargo.setSelectedIndex(0);
           txtNomeLogin.setText("");
           txtSenha.setText("");
    }//GEN-LAST:event_itLimparActionPerformed

    /**
     * Ação para sair da tela registro de clientes.
     * @param evt Evento disparado pela ação do botão.
     */
    private void itVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_itVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrarFuncionario;
    private javax.swing.JComboBox cbxCargo;
    private javax.swing.JMenuItem itLimpar;
    private javax.swing.JMenuItem itVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblNomeFuncionario;
    private javax.swing.JLabel lblNomeLogin;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JPanel pnlRegistroFuncionario;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeLogin;
    private javax.swing.JTextField txtSenha;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
    
    
    /**
     * Válida os campos CPF e Telefone, verificando se eles estão no formato correto.
     * Se os campos não estiverem no formato correto, será apresentado uma das mensagens na tela.
     * 
     * @return 'true' se ambos os campos CPF e Telefone estiverem corretos, 'false' contrário.
     */
   private boolean validacaoFuncionarios(){
        String telefone = txtTelefone.getText();
        String CPF = txtCPF.getText();
        
        
        boolean testeTelefone = telefone.matches("[0-9]{2} [0-9]{5}[-][0-9]{4}");
        boolean testeCPF = CPF.matches("[0-9]{3}[.][0-9]{3}[.][0-9]{3}[-][0-9]{2}");
        
        if(testeTelefone == false && testeCPF == false){
            JOptionPane.showMessageDialog(rootPane, "Você inseriu o CPF e telefone em um formato inválido, por favor, insira o telefone "
                    + "com DDD e o CPF com pontuação.");
            return false;
        }
        else if(testeTelefone == false && testeCPF == true){
            JOptionPane.showMessageDialog(rootPane, "Você inseriu o telefone em um formato, por favor, insira o telefone com DD.");
            return false;
        }
        else if(testeCPF == false && testeTelefone == true){
            JOptionPane.showMessageDialog(rootPane, "Você inseriu o CPF em um formato inválido, por favor, insira o CPF com pontuação.");
            return false;
        }
        else{
            return true;
        }
    }
    
   /**
    * Valida os campos Nome, Telefone e CPF, cbxCargo, NomeLogin e Senha, verificando se eles foram preenchidos e se um cargo foi selecionado.
    * Se os campos não estiverem preenchidos, ou se um cargo não foi selecionado, será apresentado uma das mensagens abaixo.
    * 
    * @return 'true' se ambos os campos CPF e Telefone estiverem corretos, 'false' contrário.
    */
    private boolean validacaoCamposFuncionario(){
        boolean camposVazios = true;
        
        if(txtNome.getText().isEmpty() && txtTelefone.getText().isEmpty() && txtCPF.getText().isEmpty() && 
                txtNomeLogin.getText().isEmpty() && txtSenha.getText().isEmpty() && cbxCargo.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(rootPane, "Você precisa preencher todos os campos e selecionar um cargo.");
        }
        else if(txtNome.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Você precisa preencher o campo Nome.");
        }
        else if(txtTelefone.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Você precisa preencher o campo Telefone.");
        }
        else if(txtCPF.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Você precisa preencher o campo CPF.");
       }
        else if(txtNomeLogin.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Você precisa preencher o campo de Nome de Usuario");
        }
        else if(txtSenha.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Você precisa preencher o campo Senha");
        }
        else if(cbxCargo.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(rootPane, "Você precisa escolher um cargo para o funcionário");
        }
        
        else{
            camposVazios = false;
        }
        
        return camposVazios;
    }
    
    /**
     * Realiza o registro usando ALT+D.
     */
    private void acessibilidadeFuncionario(){
        btnRegistrarFuncionario.setMnemonic(KeyEvent.VK_D);
    }
}